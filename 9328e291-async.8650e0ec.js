(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["9328e291"],{"9328e291":function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return o;}}),d("a156f463");let o=[{value:"When there are more than a few options to choose from, you can wrap them in a ",paraId:0,tocIndex:0},{value:"Dropdown",paraId:0,tocIndex:0},{value:". By hovering or clicking on the trigger, a dropdown menu will appear, which allows you to choose an option and execute the relevant action.",paraId:0,tocIndex:0},{value:"Common props ref\uFF1A",paraId:1,tocIndex:20},{value:"Common props",paraId:2,tocIndex:20},{value:"Property",paraId:3,tocIndex:21},{value:"Description",paraId:3,tocIndex:21},{value:"Type",paraId:3,tocIndex:21},{value:"Default",paraId:3,tocIndex:21},{value:"Version",paraId:3,tocIndex:21},{value:"arrow",paraId:3,tocIndex:21},{value:"Whether the dropdown arrow should be visible",paraId:3,tocIndex:21},{value:"boolean | { pointAtCenter: boolean }",paraId:3,tocIndex:21},{value:"false",paraId:3,tocIndex:21},{value:"autoAdjustOverflow",paraId:3,tocIndex:21},{value:"Whether to adjust dropdown placement automatically when dropdown is off screen",paraId:3,tocIndex:21},{value:"boolean",paraId:3,tocIndex:21},{value:"true",paraId:3,tocIndex:21},{value:"5.2.0",paraId:3,tocIndex:21},{value:"autoFocus",paraId:3,tocIndex:21},{value:"Focus element in ",paraId:3,tocIndex:21},{value:"overlay",paraId:3,tocIndex:21},{value:" when opened",paraId:3,tocIndex:21},{value:"boolean",paraId:3,tocIndex:21},{value:"false",paraId:3,tocIndex:21},{value:"4.21.0",paraId:3,tocIndex:21},{value:"disabled",paraId:3,tocIndex:21},{value:"Whether the dropdown menu is disabled",paraId:3,tocIndex:21},{value:"boolean",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"destroyPopupOnHide",paraId:3,tocIndex:21},{value:"Whether destroy dropdown when hidden",paraId:3,tocIndex:21},{value:"boolean",paraId:3,tocIndex:21},{value:"false",paraId:3,tocIndex:21},{value:"dropdownRender",paraId:3,tocIndex:21},{value:"Customize dropdown content",paraId:3,tocIndex:21},{value:"(menus: ReactNode) => ReactNode",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"4.24.0",paraId:3,tocIndex:21},{value:"getPopupContainer",paraId:3,tocIndex:21},{value:"To set the container of the dropdown menu. The default is to create a div element in body, but you can reset it to the scrolling area and make a relative reposition. ",paraId:3,tocIndex:21},{value:"Example on CodePen",paraId:3,tocIndex:21},{value:"(triggerNode: HTMLElement) => HTMLElement",paraId:3,tocIndex:21},{value:"() => document.body",paraId:3,tocIndex:21},{value:"menu",paraId:3,tocIndex:21},{value:"The menu props",paraId:3,tocIndex:21},{value:"MenuProps",paraId:4,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"4.24.0",paraId:3,tocIndex:21},{value:"overlayClassName",paraId:3,tocIndex:21},{value:"The class name of the dropdown root element",paraId:3,tocIndex:21},{value:"string",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"overlayStyle",paraId:3,tocIndex:21},{value:"The style of the dropdown root element",paraId:3,tocIndex:21},{value:"CSSProperties",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"placement",paraId:3,tocIndex:21},{value:"Placement of popup menu: ",paraId:3,tocIndex:21},{value:"bottom",paraId:3,tocIndex:21},{value:" ",paraId:3,tocIndex:21},{value:"bottomLeft",paraId:3,tocIndex:21},{value:" ",paraId:3,tocIndex:21},{value:"bottomRight",paraId:3,tocIndex:21},{value:" ",paraId:3,tocIndex:21},{value:"top",paraId:3,tocIndex:21},{value:" ",paraId:3,tocIndex:21},{value:"topLeft",paraId:3,tocIndex:21},{value:" ",paraId:3,tocIndex:21},{value:"topRight",paraId:3,tocIndex:21},{value:"string",paraId:3,tocIndex:21},{value:"bottomLeft",paraId:3,tocIndex:21},{value:"trigger",paraId:3,tocIndex:21},{value:"The trigger mode which executes the dropdown action. Note that hover can't be used on touchscreens",paraId:3,tocIndex:21},{value:"Array<",paraId:3,tocIndex:21},{value:"click",paraId:3,tocIndex:21},{value:"|",paraId:3,tocIndex:21},{value:"hover",paraId:3,tocIndex:21},{value:"|",paraId:3,tocIndex:21},{value:"contextMenu",paraId:3,tocIndex:21},{value:">",paraId:3,tocIndex:21},{value:"[",paraId:3,tocIndex:21},{value:"hover",paraId:3,tocIndex:21},{value:"]",paraId:3,tocIndex:21},{value:"open",paraId:3,tocIndex:21},{value:"Whether the dropdown menu is currently open. Use ",paraId:3,tocIndex:21},{value:"visible",paraId:3,tocIndex:21},{value:" under 4.23.0 (",paraId:3,tocIndex:21},{value:"why?",paraId:5,tocIndex:21},{value:")",paraId:3,tocIndex:21},{value:"boolean",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"4.23.0",paraId:3,tocIndex:21},{value:"onOpenChange",paraId:3,tocIndex:21},{value:"Called when the open state is changed. Not trigger when hidden by click item. Use ",paraId:3,tocIndex:21},{value:"onVisibleChange",paraId:3,tocIndex:21},{value:" under 4.23.0 (",paraId:3,tocIndex:21},{value:"why?",paraId:6,tocIndex:21},{value:")",paraId:3,tocIndex:21},{value:"(open: boolean, info: { source: 'trigger' | 'menu' }) => void",paraId:3,tocIndex:21},{value:"-",paraId:3,tocIndex:21},{value:"info.source",paraId:3,tocIndex:21},{value:": 5.11.0",paraId:3,tocIndex:21},{value:"Same props from Dropdown. And includes additional props:",paraId:7,tocIndex:22},{value:"Property",paraId:8,tocIndex:22},{value:"Description",paraId:8,tocIndex:22},{value:"Type",paraId:8,tocIndex:22},{value:"Default",paraId:8,tocIndex:22},{value:"Version",paraId:8,tocIndex:22},{value:"buttonsRender",paraId:8,tocIndex:22},{value:"Custom buttons inside Dropdown.Button",paraId:8,tocIndex:22},{value:"(buttons: ReactNode[]) => ReactNode[]",paraId:8,tocIndex:22},{value:"-",paraId:8,tocIndex:22},{value:"loading",paraId:8,tocIndex:22},{value:"Set the loading status of button",paraId:8,tocIndex:22},{value:"boolean | { delay: number }",paraId:8,tocIndex:22},{value:"false",paraId:8,tocIndex:22},{value:"danger",paraId:8,tocIndex:22},{value:"Set the danger status of button",paraId:8,tocIndex:22},{value:"boolean",paraId:8,tocIndex:22},{value:"-",paraId:8,tocIndex:22},{value:"4.23.0",paraId:8,tocIndex:22},{value:"icon",paraId:8,tocIndex:22},{value:"Icon (appears on the right)",paraId:8,tocIndex:22},{value:"ReactNode",paraId:8,tocIndex:22},{value:"-",paraId:8,tocIndex:22},{value:"size",paraId:8,tocIndex:22},{value:"Size of the button, the same as ",paraId:8,tocIndex:22},{value:"Button",paraId:9,tocIndex:22},{value:"string",paraId:8,tocIndex:22},{value:"default",paraId:8,tocIndex:22},{value:"type",paraId:8,tocIndex:22},{value:"Type of the button, the same as ",paraId:8,tocIndex:22},{value:"Button",paraId:10,tocIndex:22},{value:"string",paraId:8,tocIndex:22},{value:"default",paraId:8,tocIndex:22},{value:"onClick",paraId:8,tocIndex:22},{value:"The same as ",paraId:8,tocIndex:22},{value:"Button",paraId:11,tocIndex:22},{value:": called when you click the button on the left",paraId:8,tocIndex:22},{value:"(event) => void",paraId:8,tocIndex:22},{value:"-",paraId:8,tocIndex:22},{value:"Please ensure that the child node of ",paraId:12,tocIndex:23},{value:"Dropdown",paraId:12,tocIndex:23},{value:" accepts ",paraId:12,tocIndex:23},{value:"onMouseEnter",paraId:12,tocIndex:23},{value:", ",paraId:12,tocIndex:23},{value:"onMouseLeave",paraId:12,tocIndex:23},{value:", ",paraId:12,tocIndex:23},{value:"onFocus",paraId:12,tocIndex:23},{value:", ",paraId:12,tocIndex:23},{value:"onClick",paraId:12,tocIndex:23},{value:" events.",paraId:12,tocIndex:23},{value:"You can use ",paraId:13,tocIndex:26},{value:"width: max-content",paraId:13,tocIndex:26},{value:" style to handle this. ref ",paraId:13,tocIndex:26},{value:"#43025",paraId:13,tocIndex:26},{value:".",paraId:13,tocIndex:26}];}}]);